{
    "sourceFile": "src/Redux/Cartreducer.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1707816627379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1707816643085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+// actions.js\r\n+export const addToCart = (item) => {\r\n+  return {\r\n+    type: 'ADD_TO_CART',\r\n+    payload: item,\r\n+  };\r\n+};\r\n+\r\n+export const removeFromCart = (item) => {\r\n+  return {\r\n+    type: 'REMOVE_FROM_CART',\r\n+    payload: item,\r\n+  };\r\n+};\r\n+\r\n+export const clearCart = () => {\r\n+  return {\r\n+    type: 'CLEAR_CART',\r\n+  };\r\n+};\r\n+\r\n+// reducers.js\r\n+const initialState = {\r\n+  cartItems: [],\r\n+};\r\n+\r\n+const cartReducer = (state = initialState, action) => {\r\n+  switch (action.type) {\r\n+    case 'ADD_TO_CART':\r\n+      const newItem = action.payload;\r\n+      const existingItemIndex = state.cartItems.findIndex(item => item.name === newItem.name);\r\n+\r\n+      if (existingItemIndex !== -1) {\r\n+        // If item already exists, increment the quantity\r\n+        const updatedCartItems = [...state.cartItems];\r\n+        updatedCartItems[existingItemIndex].quantity += 1;\r\n+\r\n+        return {\r\n+          ...state,\r\n+          cartItems: updatedCartItems,\r\n+        };\r\n+      } else {\r\n+        // If item doesn't exist, add it to the cart with quantity 1\r\n+        return {\r\n+          ...state,\r\n+          cartItems: [...state.cartItems, { ...newItem, quantity: 1 }],\r\n+        };\r\n+      }\r\n+\r\n+    case 'REMOVE_FROM_CART':\r\n+      const itemToRemove = action.payload;\r\n+      const updatedCartItems = state.cartItems.filter(item => item.name !== itemToRemove.name);\r\n+\r\n+      return {\r\n+        ...state,\r\n+        cartItems: updatedCartItems,\r\n+      };\r\n+\r\n+    case 'CLEAR_CART':\r\n+      // Clear the entire cart\r\n+      return {\r\n+        ...state,\r\n+        cartItems: [],\r\n+      };\r\n+\r\n+    default:\r\n+      return state;\r\n+  }\r\n+};\r\n+\r\n+export default cartReducer;\r\n"
                },
                {
                    "date": 1707816651761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+\r\n+export const addToCart = (item) => {\r\n+  return {\r\n+    type: 'ADD_TO_CART',\r\n+    payload: item,\r\n+  };\r\n+};\r\n+\r\n+export const removeFromCart = (item) => {\r\n+  return {\r\n+    type: 'REMOVE_FROM_CART',\r\n+    payload: item,\r\n+  };\r\n+};\r\n+\r\n+export const clearCart = () => {\r\n+  return {\r\n+    type: 'CLEAR_CART',\r\n+  };\r\n+};\r\n+\r\n+// reducers.js\r\n+const initialState = {\r\n+  cartItems: [],\r\n+};\r\n+\r\n+const cartReducer = (state = initialState, action) => {\r\n+  switch (action.type) {\r\n+    case 'ADD_TO_CART':\r\n+      const newItem = action.payload;\r\n+      const existingItemIndex = state.cartItems.findIndex(item => item.name === newItem.name);\r\n+\r\n+      if (existingItemIndex !== -1) {\r\n+        // If item already exists, increment the quantity\r\n+        const updatedCartItems = [...state.cartItems];\r\n+        updatedCartItems[existingItemIndex].quantity += 1;\r\n+\r\n+        return {\r\n+          ...state,\r\n+          cartItems: updatedCartItems,\r\n+        };\r\n+      } else {\r\n+        // If item doesn't exist, add it to the cart with quantity 1\r\n+        return {\r\n+          ...state,\r\n+          cartItems: [...state.cartItems, { ...newItem, quantity: 1 }],\r\n+        };\r\n+      }\r\n+\r\n+    case 'REMOVE_FROM_CART':\r\n+      const itemToRemove = action.payload;\r\n+      const updatedCartItems = state.cartItems.filter(item => item.name !== itemToRemove.name);\r\n+\r\n+      return {\r\n+        ...state,\r\n+        cartItems: updatedCartItems,\r\n+      };\r\n+\r\n+    case 'CLEAR_CART':\r\n+      // Clear the entire cart\r\n+      return {\r\n+        ...state,\r\n+        cartItems: [],\r\n+      };\r\n+\r\n+    default:\r\n+      return state;\r\n+  }\r\n+};\r\n+\r\n+export default cartReducer;\r\n"
                },
                {
                    "date": 1707819930005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+// actions.js\r\n+export const addToCart = (item) => {\r\n+  return {\r\n+    type: 'ADD_TO_CART',\r\n+    payload: item,\r\n+  };\r\n+};\r\n+\r\n+export const removeFromCart = (item) => {\r\n+  return {\r\n+    type: 'REMOVE_FROM_CART',\r\n+    payload: item,\r\n+  };\r\n+};\r\n+\r\n+export const decreaseCartItem = (item) => {\r\n+  return {\r\n+    type: 'DECREASE_CART_ITEM',\r\n+    payload: item,\r\n+  };\r\n+};\r\n+\r\n+export const clearCart = () => {\r\n+  return {\r\n+    type: 'CLEAR_CART',\r\n+  };\r\n+};\r\n+\r\n+// reducers.js\r\n+const initialState = {\r\n+  cartItems: [],\r\n+};\r\n+\r\n+const cartReducer = (state = initialState, action) => {\r\n+  switch (action.type) {\r\n+    case 'ADD_TO_CART':\r\n+      const newItem = action.payload;\r\n+      const existingItemIndex = state.cartItems.findIndex(item => item.name === newItem.name);\r\n+\r\n+      if (existingItemIndex !== -1) {\r\n+        // If item already exists, increment the quantity\r\n+        const updatedCartItems = [...state.cartItems];\r\n+        updatedCartItems[existingItemIndex].quantity += 1;\r\n+\r\n+        return {\r\n+          ...state,\r\n+          cartItems: updatedCartItems,\r\n+        };\r\n+      } else {\r\n+        // If item doesn't exist, add it to the cart with quantity 1\r\n+        return {\r\n+          ...state,\r\n+          cartItems: [...state.cartItems, { ...newItem, quantity: 1 }],\r\n+        };\r\n+      }\r\n+\r\n+    case 'REMOVE_FROM_CART':\r\n+      const itemToRemove = action.payload;\r\n+      const updatedCartItems = state.cartItems.filter(item => item.name !== itemToRemove.name);\r\n+\r\n+      return {\r\n+        ...state,\r\n+        cartItems: updatedCartItems,\r\n+      };\r\n+\r\n+    case 'DECREASE_CART_ITEM':\r\n+      const itemToDecrease = action.payload;\r\n+      const updatedCartItemsDecrease = [...state.cartItems];\r\n+      const indexToDecrease = updatedCartItemsDecrease.findIndex(item => item.name === itemToDecrease.name);\r\n+\r\n+      if (indexToDecrease !== -1 && updatedCartItemsDecrease[indexToDecrease].quantity > 1) {\r\n+        updatedCartItemsDecrease[indexToDecrease].quantity -= 1;\r\n+      }\r\n+\r\n+      return {\r\n+        ...state,\r\n+        cartItems: updatedCartItemsDecrease,\r\n+      };\r\n+\r\n+    case 'CLEAR_CART':\r\n+      // Clear the entire cart\r\n+      return {\r\n+        ...state,\r\n+        cartItems: [],\r\n+      };\r\n+\r\n+    default:\r\n+      return state;\r\n+  }\r\n+};\r\n+\r\n+export default cartReducer;\r\n"
                }
            ],
            "date": 1707816627379,
            "name": "Commit-0",
            "content": "// cartReducer.js\r\nconst initialState = {\r\n    cartItems: [],\r\n  };\r\n  \r\n  const cartReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case 'ADD_TO_CART': \r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, action.payload],\r\n        };\r\n      case 'CLEAR_CART':\r\n        return {\r\n          ...state,\r\n          cartItems: [],\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default cartReducer;\r\n  "
        }
    ]
}